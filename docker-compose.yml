version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: reactai_postgres
    environment:
      POSTGRES_DB: reactai_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - reactai_network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: reactai_backend
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/reactai_db
      API_HOST: 0.0.0.0
      API_PORT: 8000
      DEBUG: "False"
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./backend/models:/app/models
    depends_on:
      - postgres
    networks:
      - reactai_network
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: reactai_frontend
    environment:
      REACT_APP_API_URL: http://localhost:8000
      REACT_APP_MODEL_URL: https://teachablemachine.withgoogle.com/models/YwDSlSEVp/
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - reactai_network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: reactai_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - reactai_network
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:

networks:
  reactai_network:
    driver: bridge
